public class {{ api_name }} extends TriggerHandler {
		
	public List<{{ object_name }}> triggerNew = (List<{{ object_name }}>) Trigger.new;
	public List<{{ object_name }}> triggerOld = (List<{{ object_name }}>) Trigger.old;

	public Map<Id, {{ object_name }}> newMap = (Map<Id, {{ object_name }}>) Trigger.newMap;
	public Map<Id, {{ object_name }}> oldMap = (Map<Id, {{ object_name }}>) Trigger.oldMap;
	
	// *************************************
	// ******* Public Declarations *********
	// *************************************
	
	// ******************************
	// ******* Constructor **********
	// ******************************
	public {{ api_name }}() {}
	
	// **********************************
	// ******* Before Insert ************
	// **********************************
	public override void beforeInsert() {}

	// **********************************
	// ******* Before Update ************
	// **********************************
	public override void beforeUpdate() {}

	// **********************************
	// ******* Before Delete ************
	// **********************************
	public override void beforeDelete() {}

	// **********************************
	// ******* After Insert *************
	// **********************************
	public override void afterInsert() {}

	// **********************************
	// ******* After Update *************
	// **********************************
	public override void afterUpdate() {}

	// **********************************
	// ******* After Delete *************
	// **********************************
	public override void afterDelete() {}

	// **********************************
	// ******* After UnDelete ***********
	// **********************************
	public override void afterUndelete() {}

	// *********************************************************************************************************************************************************************************************
	// *********************************************************************************************************************************************************************************************
	// *********************************************************************************************************************************************************************************************
	
 
}